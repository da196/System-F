/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2019-12-30 13:05:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.backend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class alert_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- Start header -->\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includes/header.jsp", out, false);
      out.write("\n");
      out.write("<!-- End header -->\n");
      out.write("\n");
      out.write("<!-- Start Top header View -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includes/topView.jsp", out, false);
      out.write("\n");
      out.write("<!-- End Top Header View -->\n");
      out.write("\n");
      out.write("<!-- Start SideBar View -->\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includes/sideView.jsp", out, false);
      out.write("\n");
      out.write("<!-- End SideBar View -->\n");
      out.write("\n");
      out.write("      <main class=\"main\">\n");
      out.write("         <!-- Breadcrumb-->\n");
      out.write("         <ol class=\"breadcrumb\">\n");
      out.write("          <li class=\"breadcrumb-item\">Home</li>\n");
      out.write("          <li class=\"breadcrumb-item\">\n");
      out.write("            Components\n");
      out.write("          </li>   \n");
      out.write("          <li class=\"breadcrumb-item\">\n");
      out.write("            <a href=\"alert.php\">Alert</a>\n");
      out.write("          </li>   \n");
      out.write("        </ol>        \n");
      out.write("        <!-- Breadcrumb-->\n");
      out.write("        <div class=\"container-fluid\">\n");
      out.write("          <div class=\"animated fadeIn\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("              <div class=\"col-sm-12 col-xl-12\">\n");
      out.write("                <div class=\"card\">\n");
      out.write("                  <div class=\"card-header\">\n");
      out.write("                    <i class=\"fa fa-align-justify\"></i> Live Status of Channels/Stations            \n");
      out.write("                  </div>\n");
      out.write("                  <div class=\"card-body\">                  \n");
      out.write("                    <table id=\"datatables\" class=\"table table-striped table-no-bordered table-hover\" cellspacing=\"0\" width=\"100%\" style=\"width:100%\">\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<thead>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("                                                <th>Source</th>\n");
      out.write("                                                <th>Status</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th>Description</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</thead>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tfoot>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\n");
      out.write("                                                <th>Source</th>\n");
      out.write("                                                <th>Status</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th>Description</th>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tfoot>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t          <!-- Start of the Table Body -->\t\n");
      out.write("\t\t\t\t\t\t\t\t\t  \n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>ITV</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td> <span class=\"badge badge-success\" style=\"width:15px; height:17px;\">  </span></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>                       \n");
      out.write("                                                Video and Audio OK\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("                                            </tr>\t\n");
      out.write("                                            \n");
      out.write("                                            <tr>\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>EFM</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"badge badge-danger\" style=\"width:15px; height:17px;\">  </span></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>                       \n");
      out.write("                                                Video and Audio not OK\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("                                            </tr>\n");
      out.write("                                            \n");
      out.write("                                            <tr>\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>WASAFI TV</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"badge badge-warning\" style=\"width:15px; height:17px;\"> </span></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>                       \n");
      out.write("                                                Video OK but Audio is not OK\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("                                            </tr>\n");
      out.write("                                            \n");
      out.write("                                            <tr>\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>RADIO ONE</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td><span class=\"badge badge-danger\" style=\"width:15px; height:17px;\"> </span></td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>                       \n");
      out.write("                                                Audio is not OK\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- End of the Table Body -->\n");
      out.write("\t\t\t\t\t\t\t\t\t\t   </tbody>\n");
      out.write("\t\t\t\t\t\t\t\t\t    </table>                     \n");
      out.write("                    \n");
      out.write("\n");
      out.write("                    \n");
      out.write("                </div>\n");
      out.write("                \n");
      out.write("              </div>\n");
      out.write("             \n");
      out.write("            </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("      </main>\n");
      out.write("<!-- Start AsideMenu View -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includes/asideMenuView.jsp", out, false);
      out.write("\n");
      out.write("<!-- End AsideMenu View --> \n");
      out.write("    </div>\n");
      out.write("    \n");
      out.write("\n");
      out.write("<!-- Start Top header View -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "includes/footer.jsp", out, false);
      out.write("\n");
      out.write("<!-- End Top Header View -->\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("$(document).ready(function() {\n");
      out.write("\n");
      out.write("    $('#datatables').DataTable();\n");
      out.write("\n");
      out.write("    });\n");
      out.write("\n");
      out.write("  </script>\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
