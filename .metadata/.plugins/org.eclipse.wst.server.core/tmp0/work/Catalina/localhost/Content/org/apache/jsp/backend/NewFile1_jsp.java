/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2020-04-21 06:48:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.backend;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class NewFile1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"http://code.jquery.com/jquery-1.4.2.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!--  \r\n");
      out.write("\r\n");
      out.write("<video autoplay=\"\" muted=\"\" poster=\"\" id=\"myVideo\">\r\n");
      out.write("    <source src=\"vid/channel10/video_1010.mp4\" id=\"mp4Source\" type=\"video/mp4\">\r\n");
      out.write("    Your browser does not support the video tag.\r\n");
      out.write("</video>\r\n");
      out.write("<br>\r\n");
      out.write("<video autoplay=\"\" muted=\"\" poster=\"\" id=\"myVideo2\">\r\n");
      out.write("    <source src=\"vid/tbc/video_1001.mp4\" id=\"mp4Source2\" type=\"video/mp4\">\r\n");
      out.write("    Your browser does not support the video tag.\r\n");
      out.write("</video>\r\n");
      out.write("\r\n");
      out.write("-->\r\n");
      out.write("<audio id=\"classic-audio\" controls>\r\n");
      out.write(" <source src=\"vid/file1.mp3\" id=\"mp4Source3\" type=\"audio/mp3\">\r\n");
      out.write("</audio>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type='text/javascript'>\r\n");
      out.write("   var count=1010;\r\n");
      out.write("   var player=document.getElementById('myVideo');\r\n");
      out.write("   var mp4Vid = document.getElementById('mp4Source');\r\n");
      out.write("   player.addEventListener('ended',myHandler,false);\r\n");
      out.write("   \r\n");
      out.write("   var count1=1001;\r\n");
      out.write("   var player1=document.getElementById('myVideo2');\r\n");
      out.write("   var mp4Vid1 = document.getElementById('mp4Source2');\r\n");
      out.write("   player1.addEventListener('ended',myHandler2,false);\r\n");
      out.write("   \r\n");
      out.write("   function myHandler(e)\r\n");
      out.write("   {\r\n");
      out.write("\r\n");
      out.write("      if(!e) \r\n");
      out.write("      {\r\n");
      out.write("         e = window.event; \r\n");
      out.write("      }\r\n");
      out.write("      count++;\r\n");
      out.write("      $(mp4Vid).attr('src', \"vid/channel10/video_\"+count+\".mp4\");\r\n");
      out.write("      player.load();\r\n");
      out.write("      player.play();\r\n");
      out.write("\r\n");
      out.write("   }\r\n");
      out.write("   \r\n");
      out.write("   function myHandler2(e)\r\n");
      out.write("   {\r\n");
      out.write("\r\n");
      out.write("      if(!e) \r\n");
      out.write("      {\r\n");
      out.write("         e = window.event; \r\n");
      out.write("      }\r\n");
      out.write("           \r\n");
      out.write("      count1++;\r\n");
      out.write("      $(mp4Vid1).attr('src', \"vid/tbc/video_\"+count1+\".mp4\");\r\n");
      out.write("      player1.load();\r\n");
      out.write("      player1.play();\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
