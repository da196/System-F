/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.42
 * Generated at: 2020-01-08 14:25:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.backend.actions.components;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.*;
import java.util.Vector;
import java.util.Vector;
import tcms.presentation.*;
import tcms.configuration.*;
import java.io.PrintWriter;

public final class newLocalIndexCard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("tcms.presentation");
    _jspx_imports_packages.add("tcms.configuration");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.PrintWriter");
    _jspx_imports_classes.add("java.util.Vector");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");

try{
	String contentType = request.getParameter("contentType");
	String programme_name = request.getParameter("programmeName");
	String content_date = request.getParameter("file_date");
	String start_time = request.getParameter("start_time");
	String end_time = request.getParameter("end_time");
	String language_used = request.getParameter("language");
	String programme_type = request.getParameter("typeNews");  //content_category_id
	String programme_duration = request.getParameter("durationProgramme");
	String education_content  = request.getParameter("educationalContent");
	String cultural_identity  = request.getParameter("culturalIdentity");
	String use_offensive_language  = request.getParameter("useOffensiveLanguage");
	String obs_water_shed_period  = request.getParameter("observeWatershedPeriod");
	String accepted_picture  = request.getParameter("accepted_picture");
	String sign_language_interpreter  = request.getParameter("signLanguageInterpreter");
	String producer_independent  = request.getParameter("producer");
	String disclose_name_producer  = request.getParameter("discloseNameProducer");
	String family_viewing_classification  = request.getParameter("familyViewing");
	String general_observations_reg_breached  = request.getParameter("newsRegulationBreached");
	String user_id = request.getParameter("user_id");
	String channel_id = request.getParameter("channel_id");
	String content_nat_interest_id  = request.getParameter("eventNationalInterest");
	String scheduled_time = request.getParameter("programTime");
	String news_item_description = request.getParameter("newsItemDescription");
	String news_item_start_time = request.getParameter("newsItemStartTime");
	String news_item_end_time = request.getParameter("newsItemEndTime");

	Long checker = NewsLocalIndexCard.checker(programme_name, content_date, start_time, end_time, programme_type, 
			user_id, channel_id, news_item_description, news_item_start_time, news_item_end_time);
	System.out.println(checker);
	if(checker == 0){
		int status = NewsLocalIndexCard.setLocalNewsIndexCard(programme_name, content_date, start_time, end_time, language_used, 
				programme_type, programme_duration, education_content, cultural_identity, use_offensive_language, 
				obs_water_shed_period, content_nat_interest_id, accepted_picture, sign_language_interpreter, 
				producer_independent, disclose_name_producer, family_viewing_classification, general_observations_reg_breached, 
				user_id, channel_id, content_nat_interest_id, news_item_description, news_item_start_time, news_item_end_time, 
				scheduled_time);
		PrintWriter printWriter = response.getWriter();
		printWriter.print("{\"status\":1}");
	}else{
		PrintWriter printWriter = response.getWriter();
		printWriter.print("{\"status\":2}");
	}
	
	
	
	
}catch(Exception er){
	er.printStackTrace();
}


    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
